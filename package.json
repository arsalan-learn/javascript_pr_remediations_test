{
  "name": "procurement-app",
  "version": "1.0.0",
  "description": "TestPro Procurement API and client applications",
  "main": "index.js",
  "scripts": {
    "dev-build": "cross-env NODE_ENV=development nodemon --inspect=0.0.0.0 -L bin/client.js --watch src/server --watch webpack",
    "dev-server": "turbo run dev --filter=ui dev-build --filter=//",
    "prod-server": "cross-env NODE_ENV=production node bin/client.js",
    "support-dev-server": "cross-env NODE_ENV=development APP_NAME=support API_HOST=http://localhost:3000/support/v1 npm run dev-server",
    "dev-api": "cross-env NODE_ENV=development nodemon --inspect=0.0.0.0 -L server/index.js --watch server",
    "prod-api": "cross-env NODE_ENV=production node server/index.js",
    "prelint": "npm run build:ui",
    "lint": "eslint --quiet --color --cache --report-unused-disable-directives . && stylelint --cache **/*.scss",
    "lint:style:fix": "stylelint --cache **/*.scss --fix",
    "db:init": "node server/db/syncNew.js",
    "db:seed": "npm run db:init && node --trace-warnings server/db/seed.js",
    "db:seed:req": "npm run db:seed && node server/requisitions/db/seed",
    "db:seed:reqOnly": "cross-env REQ_ONLY=true npm run db:seed:req",
    "db:seed:reqFin": "npm run db:seed:req && node server/requisitions/db/seed/finConfig",
    "db:seed:reqFinOnly": "npm run db:seed:reqOnly && node server/requisitions/db/seed/finConfig",
    "sequelize:db:migrate": "sequelize db:migrate",
    "sequelize:db:migrate:undo": "sequelize db:migrate:undo",
    "sequelize:migration:create": "sequelize migration:create",
    "test": "npm run test-api && npm run test-server && npm run test-client && npm run test:build && npm run test-e2e",
    "test:db:init": "cross-env NODE_ENV=test npm run db:init",
    "test-api": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'server/**/*test.js' --require server/tests/testHelper.js --timeout 20000 --exit",
    "test-req-api": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'server/requisitions/**/*test.js' --require server/tests/testHelper.js --timeout 20000 --exit",
    "test-apps": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'apps/**/*.js' --exclude '**/node_modules/**' --exclude 'apps/custom-form-service/**' --timeout 20000 --exit --require baseSetup.js",
    "test-packages": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'packages/**/*_test.js' --exclude '**/node_modules/**' --exclude 'packages/client/**' --timeout 20000 --exit --require baseSetup.js",
    "test-api-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require ./server/tests/testHelper.js",
    "test-packages-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require baseSetup.js",
    "test-apps-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require baseSetup.js",
    "test-api-file-coverage": "nyc --reporter lcov npm run test-api-file",
    "test-packages-file-coverage": "nyc --reporter lcov npm run test-packages-file",
    "test-apps-file-coverage": "nyc --reporter lcov npm run test-apps-file",
    "test-server": "turbo run test:server --filter=@og-pro/pro-client",
    "test-client": "turbo run test --filter=@og-pro/pro-client --filter=@og-pro/ui",
    "test-e2e": "cd apps/e2e-tests && npm run test:prepare && npm run test",
    "test-coverage": "nyc --reporter lcov npm run test-api",
    "coverage": "nyc report",
    "coverage-report": "nyc report --reporter=lcovonly",
    "clean": "rimraf dist",
    "test:build": "turbo run test:build --filter=@og-pro/pro-client",
    "build:ui": "turbo run build --filter=ui",
    "prepare": "node .husky/install.mjs",
    "create-topics": "node server/bin/createTopics.js",
    "send-message": "node server/bin/sendMessage.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/arsalan-learn/javascript_pr_remediations_test.git"
  },
  "author": "TestPro",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/arsalan-learn/javascript_pr_remediations_test/issues"
  },
  "homepage": "https://github.com/arsalan-learn/javascript_pr_remediations_test#readme",
  "dependencies": {
    "@graphql-tools/wrap": "^10.0.5",
    "@koa/router": "^13.1.0",
    "bull": "^4.12.2",
    "cloudconvert": "^2.3.0",
    "docusign-esign": "^6.0.0",
    "docx": "^8.0.0",
    "express": "^4.18.2",
    "kafkajs": "^2.2.4",
    "launchdarkly-node-server-sdk": "^7.0.0",
    "winston": "^3.11.0",
    "nodemailer": "^6.9.7",
    "openai": "^4.0.0",
    "redis": "^4.6.10",
    "rollbar": "^2.26.0",
    "aws-sdk": "^2.1504.0",
    "sequelize": "^6.37.3",
    "socket.io": "^4.7.4",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.46.0",
    "@opentelemetry/instrumentation-pg": "^0.49.0",
    "@opentelemetry/resources": "^1.29.0",
    "@opentelemetry/sdk-node": "^0.51.0",
    "@opentelemetry/semantic-conventions": "^1.28.0",
    "express-validator": "^7.0.1",
    "jsonwebtoken": "8.5.1",
    "bcryptjs": "^2.4.3",
    "helmet": "^7.1.0",
    "cors": "^2.8.5",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "pino": "^8.17.1",
    "pino-pretty": "^10.2.3",
    "slack-web-api-client": "^0.1.0",
    "coa": "2.0.2",
    "webpack": "5.73.0"
  },
  "workspaces": [
    "apps/*",
    "packages/*"
  ]
} 