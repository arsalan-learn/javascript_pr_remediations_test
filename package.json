{
  "name": "procurement-app",
  "version": "1.0.0",
  "description": "OpenGov Procurement API and client applications",
  "main": "index.js",
  "scripts": {
    "dev-build": "cross-env NODE_ENV=development nodemon --inspect=0.0.0.0 -L bin/client.js --watch src/server --watch webpack",
    "dev-server": "turbo run dev --filter=ui dev-build --filter=//",
    "prod-server": "cross-env NODE_ENV=production node bin/client.js",
    "support-dev-server": "cross-env NODE_ENV=development APP_NAME=support API_HOST=http://localhost:3000/support/v1 npm run dev-server",
    "dev-api": "cross-env NODE_ENV=development nodemon --inspect=0.0.0.0 -L server/index.js --watch server",
    "prod-api": "cross-env NODE_ENV=production node server/index.js",
    "prelint": "npm run build:ui",
    "lint": "eslint --quiet --color --cache --report-unused-disable-directives . && stylelint --cache **/*.scss",
    "lint:style:fix": "stylelint --cache **/*.scss --fix",
    "db:init": "node server/db/syncNew.js",
    "db:seed": "npm run db:init && node --trace-warnings server/db/seed.js",
    "db:seed:req": "npm run db:seed && node server/requisitions/db/seed",
    "db:seed:reqOnly": "cross-env REQ_ONLY=true npm run db:seed:req",
    "db:seed:reqFin": "npm run db:seed:req && node server/requisitions/db/seed/finConfig",
    "db:seed:reqFinOnly": "npm run db:seed:reqOnly && node server/requisitions/db/seed/finConfig",
    "sequelize:db:migrate": "sequelize db:migrate",
    "sequelize:db:migrate:undo": "sequelize db:migrate:undo",
    "sequelize:migration:create": "sequelize migration:create",
    "test": "npm run test-api && npm run test-server && npm run test-client && npm run test:build && npm run test-e2e",
    "test:db:init": "cross-env NODE_ENV=test npm run db:init",
    "test-api": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'server/**/*test.js' --require server/tests/testHelper.js --timeout 20000 --exit",
    "test-req-api": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'server/requisitions/**/*test.js' --require server/tests/testHelper.js --timeout 20000 --exit",
    "test-apps": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'apps/**/*.js' --exclude '**/node_modules/**' --exclude 'apps/custom-form-service/**' --timeout 20000 --exit --require baseSetup.js",
    "test-packages": "cross-env NODE_ENV=test npm run db:init && cross-env NODE_ENV=test mocha 'packages/**/*_test.js' --exclude '**/node_modules/**' --exclude 'packages/client/**' --timeout 20000 --exit --require baseSetup.js",
    "test-api-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require ./server/tests/testHelper.js",
    "test-packages-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require baseSetup.js",
    "test-apps-file": "docker/env/local/scripts/create-self-signed-cert.sh && cross-env NODE_ENV=test mocha --timeout 20000 --exit --require baseSetup.js",
    "test-api-file-coverage": "nyc --reporter lcov npm run test-api-file",
    "test-packages-file-coverage": "nyc --reporter lcov npm run test-packages-file",
    "test-apps-file-coverage": "nyc --reporter lcov npm run test-apps-file",
    "test-server": "turbo run test:server --filter=@og-pro/pro-client",
    "test-client": "turbo run test --filter=@og-pro/pro-client --filter=@og-pro/ui",
    "test-e2e": "cd apps/e2e-tests && npm run test:prepare && npm run test",
    "test-coverage": "nyc --reporter lcov npm run test-api",
    "coverage": "nyc report",
    "coverage-report": "nyc report --reporter=lcovonly",
    "clean": "rimraf dist",
    "test:build": "turbo run test:build --filter=@og-pro/pro-client",
    "build:ui": "turbo run build --filter=ui",
    "prepare": "node .husky/install.mjs",
    "create-topics": "node server/bin/createTopics.js",
    "send-message": "node server/bin/sendMessage.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/arsalan-learn/javascript_pr_remediations_test.git"
  },
  "author": "OpenGov",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/arsalan-learn/javascript_pr_remediations_test/issues"
  },
  "homepage": "https://github.com/arsalan-learn/javascript_pr_remediations_test#readme",
  "dependencies": {
    "@graphql-tools/wrap": "^10.0.5",
    "@koa/router": "^13.1.0",
    "@og-pro/add-event": "^1.0.0",
    "@og-pro/auth": "^1.0.0",
    "@og-pro/backend-helpers": "^1.0.0",
    "@og-pro/backend-request": "^1.0.0",
    "@og-pro/backend-util": "^1.0.0",
    "@og-pro/base-setup": "^1.0.0",
    "@og-pro/bull-queues": "^1.0.0",
    "@og-pro/cache": "^1.0.0",
    "@og-pro/cloud-convert": "^1.0.0",
    "@og-pro/db-migration": "^1.0.0",
    "@og-pro/docusign": "^1.0.0",
    "@og-pro/docx": "^1.0.0",
    "@og-pro/errors": "^1.0.0",
    "@og-pro/file-processor": "^1.0.0",
    "@og-pro/global-entity-cache": "^1.0.0",
    "@og-pro/kafka": "*",
    "@og-pro/launch-darkly": "^1.0.0",
    "@og-pro/logger": "^1.0.0",
    "@og-pro/mailer": "*",
    "@og-pro/og-platform": "^1.0.0",
    "@og-pro/open-ai": "^1.0.0",
    "@og-pro/procurated": "^1.0.0",
    "@og-pro/redis": "^1.0.0",
    "@og-pro/rollbar": "^1.0.0",
    "@og-pro/s3": "^1.0.0",
    "@og-pro/sequelize-helpers": "^1.0.0",
    "@og-pro/service-harness": "^1.0.0",
    "@og-pro/shared-config": "^1.0.0",
    "@og-pro/slack-notify": "^1.0.0",
    "@og-pro/sourcing-bull-jobs": "^1.0.0",
    "@og-pro/sourcing-db-models": "^1.0.0",
    "@og-pro/sourcing-sockets": "^1.0.0",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.46.0",
    "@opentelemetry/instrumentation-pg": "^0.49.0",
    "@opentelemetry/resources": "^1.29.0",
    "@opentelemetry/sdk-node": "^0.51.0",
    "@opentelemetry/semantic-conventions": "^1.28.0"
  },
  "workspaces": [
    "apps/*",
    "packages/*"
  ]
} 